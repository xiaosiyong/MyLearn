## 链表相关

1、单链表反转

2、两个有序链表合并

3、两个链表返回第一个公共节点

1）暴力匹配

2）哈希

3）找到长度差，然后挨个匹配

4）两个链表一起遍历，短链表遍历完之后指向长链表，长链表遍历完指向短链表，然后就会相交了。

4、如何判断一个链表中是否存在环（若有环，求环的长度和入口点）

5、接取出单链表中的后K个节点（k>0)

6、去除有序链表中的重复元素（一个有序链表，删除所有重复的元素，保证每个元素在链表中只出现一次）

7、求链表的中间节点，给定一个带有头节点的非空单链表，返回链表的中间节点，如果有两个，返回第二个。

输入：[1,2,3,4,5]，输出：此列表中的结点 3 ，返回的节点值为3。

8、删除链表中的节点 (leetcode 237)，请编写一个函数，使其可以删除某个链表中给定的（非末尾）节点。也就是你仅知道要求被删除的节点。输入: head = [4,5,1,9], node = 5 输出: [4,1,9]

9、删除链表的倒数第N个节点(leetcode 19)，给定一个链表: 1->2->3->4->5, 和 n = 2.当删除了倒数第二个节点后，链表变为 1->2->3->5.

